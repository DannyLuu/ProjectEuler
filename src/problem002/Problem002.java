package problem002;

/**
 * Even Fibonacci numbers
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 * Answer: 4613732

 * @author Danny Luu
 *
 */
public class Problem002 {
	
	// Base Cases
	int a = 1;
	int b = 2;
	
	/**
	 * Fibonnaci function - recursive
	 * @param a
	 * @param b
	 * @return
	 */
	public int fib(int x) {
		if (x == a) {
			return a;
		} else if (x == b) {
			return b;
		}
		return fib(x-1) + fib(x-2);
	}
	
	/**
	 * Fibonnaci function - tail-recursive
	 * @param x
	 * @return
	 */
	public int fib2(int x) {
		if (x <= 1) {
			return 1;
		}
		return fibTailResursion(1,1,x);
	}
	
	/**
	 * The tail recursive portion of the fibonnaci function.
	 * @param x
	 * @param y
	 * @param count
	 * @return
	 */
	public int fibTailResursion(int x, int y , int count) {
		if (count <= 0) {
			return x;
		}
		return fibTailResursion(y, x + y, count-1);
	}
	
	public int sumOfEvenFibNumbers(int x) {
		
	}
}
